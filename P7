#use"CPutil.ml";;
#use"jeuCP2.ml";;

type 'a t_array = {len : int; value : 'a array;};;
type t_shape = {shape : t_point list; x_len : int; y_len : int; rot_rgt_base : t_point; rot_rgt_shape : int; rot_lft_base : t_point; rot_lft_shape : int;};;
type t_cur_shape = {base : t_point Pervasives.ref; shape : int Pervasives.ref; color : CPutil.t_color Pervasives.ref;};;
type t_param_time = {init : float; extent : float; ratio : float;};;
type t_param_graphics = {base : t_point ; dilat : int;color_arr : CPutil.t_color t_array;};;
type t_param = {time : t_param_time; mat_szx : int; mat_szy : int; graphics : t_param_graphics; shapes : t_shape t_array;};;
type t_play = {par : t_param; cur_shape : t_cur_shape; mat : CPutil.t_color CPutil.matrix;};;

(*Exercice 7*)

let valid_matrix_point(p, param : t_point * t_param) : bool =
  if  p.x<0 || p.y<0 || p.x>15 || p.y>28
  then false
  else true
;;
